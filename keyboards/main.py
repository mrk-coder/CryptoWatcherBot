# keyboards/main.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def welcome_keyboard(has_subscription=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if has_subscription:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìä –í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É", callback_data="choose_currency")],
            [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="how_it_works")],
            [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
        ])
    else:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="buy_subscription")],
            [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="how_it_works")]
        ])
    return keyboard

def subscription_success_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É", callback_data="choose_currency")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
    ])
    return keyboard

def profile_keyboard(has_subscription=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    buttons = [
        [InlineKeyboardButton(text="üìä –ú–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è", callback_data="my_tracking")],
    ]
    if not has_subscription:
        buttons.append([InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="buy_subscription")])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def payment_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü§ñ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ CryptoBot", callback_data="pay_via_cryptobot")],
        [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="check_payment")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂", callback_data="cancel_payment")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])
    return keyboard

def invoice_keyboard(invoice_url: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=invoice_url)],
        [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="check_payment")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂", callback_data="cancel_payment")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="buy_subscription")]
    ])
    return keyboard

def currency_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç"""
    currencies = [
        ("‚Çø Bitcoin (BTC)", "BTC"),
        ("Œû Ethereum (ETH)", "ETH"),
        ("BNB Binance Coin (BNB)", "BNB"),
        ("SOL Solana (SOL)", "SOL"),
        ("XRP Ripple (XRP)", "XRP")
    ]
    buttons = [[InlineKeyboardButton(text=name, callback_data=f"track_{symbol}")] for name, symbol in currencies]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def tracking_menu_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìà –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É", callback_data="choose_currency")],
        [InlineKeyboardButton(text="üìä –ú–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è", callback_data="my_tracking")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
    ])
    return keyboard

def my_tracking_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–æ–∏—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìà –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É", callback_data="choose_currency")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])
    return keyboard

def settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="settings_interval")],
        [InlineKeyboardButton(text="üìä –ü–æ—Ä–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã", callback_data="settings_threshold")],
        [InlineKeyboardButton(text="üìù –§–æ—Ä–º–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="settings_format")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])
    return keyboard

def interval_settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞"""
    intervals = [
        ("1 –º–∏–Ω—É—Ç–∞", 1),
        ("2 –º–∏–Ω—É—Ç—ã", 2),
        ("5 –º–∏–Ω—É—Ç", 5),
        ("10 –º–∏–Ω—É—Ç", 10),
        ("15 –º–∏–Ω—É—Ç", 15)
    ]
    buttons = [[InlineKeyboardButton(text=name, callback_data=f"set_interval_{minutes}")] for name, minutes in intervals]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="settings")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def threshold_settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Ä–æ–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    thresholds = [
        ("0.1%", 0.1),
        ("0.5%", 0.5),
        ("1%", 1.0),
        ("2%", 2.0),
        ("3%", 3.0),
        ("5%", 5.0)
    ]
    buttons = [[InlineKeyboardButton(text=name, callback_data=f"set_threshold_{value}")] for name, value in thresholds]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="settings")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def format_settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    formats = [
        ("–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", "classic"),
        ("–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π", "compact"),
        ("–ü–æ–¥—Ä–æ–±–Ω—ã–π", "detailed")
    ]
    buttons = [[InlineKeyboardButton(text=name, callback_data=f"set_format_{fmt}")] for name, fmt in formats]
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="settings")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)
    
def subscription_periods_keyboard(prices):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    period_names = {'day': '–î–µ–Ω—å', 'week': '–ù–µ–¥–µ–ª—è', 'month': '–ú–µ—Å—è—Ü'}
    buttons = []
    
    for period, price in prices.items():
        button_text = f"{period_names.get(period, period)} - {price} USDT"
        buttons.append([InlineKeyboardButton(text=button_text, callback_data=f"subscribe_{period}")])
    
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)
